# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/cbor/all/cbor.rbi
#
# cbor-0.5.9.6

module CBOR
  def decode(*arg0); end
  def dump(*arg0); end
  def encode(*arg0); end
  def load(*arg0); end
  def pack(*arg0); end
  def self.decode(*arg0); end
  def self.dump(*arg0); end
  def self.encode(*arg0); end
  def self.load(*arg0); end
  def self.pack(*arg0); end
  def self.unpack(*arg0); end
  def unpack(*arg0); end
end
class CBOR::Tagged < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
  def to_cbor(*arg0); end
  def value; end
  def value=(_); end
end
class CBOR::Simple < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def to_cbor(*arg0); end
  def value; end
  def value=(_); end
end
class CBOR::Buffer
  def <<(arg0); end
  def clear; end
  def close; end
  def empty?; end
  def flush; end
  def initialize(*arg0); end
  def io; end
  def read(*arg0); end
  def read_all(*arg0); end
  def size; end
  def skip(arg0); end
  def skip_all(arg0); end
  def to_a; end
  def to_s; end
  def to_str; end
  def write(arg0); end
  def write_to(arg0); end
end
class CBOR::Packer
  def buffer; end
  def clear; end
  def empty?; end
  def flush; end
  def initialize(*arg0); end
  def pack(arg0); end
  def size; end
  def to_a; end
  def to_s; end
  def to_str; end
  def write(arg0); end
  def write_array_header(arg0); end
  def write_map_header(arg0); end
  def write_nil; end
  def write_to(arg0); end
end
class CBOR::Unpacker
  def buffer; end
  def each; end
  def feed(arg0); end
  def feed_each(arg0); end
  def initialize(*arg0); end
  def read; end
  def read_array_header; end
  def read_map_header; end
  def reset; end
  def skip; end
  def skip_nil; end
  def unpack; end
end
class NilClass
  def to_cbor(*arg0); end
end
class TrueClass
  def to_cbor(*arg0); end
end
class FalseClass
  def to_cbor(*arg0); end
end
class Integer < Numeric
  def to_cbor(*arg0); end
end
class Float < Numeric
  def to_cbor(*arg0); end
end
class String
  def to_cbor(*arg0); end
end
class Array
  def to_cbor(*arg0); end
end
class Hash
  def to_cbor(*arg0); end
end
class Symbol
  def to_cbor(*arg0); end
end
class Time
  def to_cbor(*arg0); end
end
class Regexp
  def to_cbor(*arg0); end
end
module URI
  def to_cbor(*arg0); end
end
