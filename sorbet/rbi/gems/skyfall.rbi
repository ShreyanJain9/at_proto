# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/skyfall/all/skyfall.rbi
#
# skyfall-0.2.0

module Skyfall
end
class Skyfall::DecodeError < StandardError
end
class Skyfall::UnsupportedError < StandardError
end
class Skyfall::SubscriptionError < StandardError
  def error_message; end
  def error_type; end
  def initialize(error_type, error_message = nil); end
end
class Skyfall::CID
  def ==(other); end
  def data; end
  def initialize(data); end
  def inspect; end
  def self.from_cbor_tag(tag); end
  def self.from_json(string); end
  def to_s; end
end
module Skyfall::Extensions
end
class Skyfall::CarSection
  def body; end
  def cid; end
  def initialize(cid, body); end
end
class Skyfall::CarArchive
  def initialize(data); end
  def read_header(buffer); end
  def read_section(buffer); end
  def roots; end
  def sections; end
end
module Skyfall::Collection
end
class Skyfall::Operation
  def action; end
  def cid; end
  def collection; end
  def initialize(repo, path, action, cid, record); end
  def path; end
  def raw_record; end
  def repo; end
  def rkey; end
  def type; end
  def uri; end
end
class Skyfall::WebsocketMessage
  def blocks; end
  def commit; end
  def data_object; end
  def decode_cbor_objects(data); end
  def initialize(data); end
  def inspect; end
  def operations; end
  def prev; end
  def repo; end
  def seq; end
  def time; end
  def type; end
  def type_object; end
end
class Skyfall::Stream
  def auto_reconnect; end
  def auto_reconnect=(arg0); end
  def build_websocket_url; end
  def check_endpoint(endpoint); end
  def check_hostname(server); end
  def close; end
  def connect; end
  def cursor; end
  def cursor=(arg0); end
  def disconnect; end
  def heartbeat_interval; end
  def heartbeat_interval=(arg0); end
  def heartbeat_timeout; end
  def heartbeat_timeout=(arg0); end
  def initialize(server, endpoint, cursor = nil); end
  def on_connect(&block); end
  def on_connecting(&block); end
  def on_disconnect(&block); end
  def on_error(&block); end
  def on_message(&block); end
  def on_raw_message(&block); end
  def on_reconnect(&block); end
  def reconnect_delay; end
end
