# typed: true
module ATProto
  class Writes < T::Struct
    class Write < T::Struct
      class Action < T::Enum
        Create: untyped

        Update: untyped

        Delete: untyped
      end

      extend T::Sig

      def to_h: () -> untyped

      #  If you want to use with individual actions instead of applyWrites:
      def endpoint_name: () -> untyped

      def to_individual_hash: (untyped session) -> untyped

      def to_proc: () -> untyped
    end

    extend T::Sig

    def to_h: () -> untyped

    def apply: () -> untyped

    extend T::Sig

    def self.generate: () { () -> untyped } -> untyped
  end

  class Writes
    class Collector
      include RequestUtils

      extend T::Sig

      def initialize: () -> void

      def create: (untyped hash) -> untyped

      def update: (untyped uri, untyped hash) -> untyped

      def delete: (untyped uri) -> untyped
    end
  end
end
